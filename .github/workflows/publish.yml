name: Publish
on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:
  build_tarballs:
    name: Build tarballs
    runs-on: ubuntu-22.04-ppc64le
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v25
      - name: Build tarballs
        run: |
          nix build -L .#hydraJobs.tarball
          install -D ./result/tarballs/*.tar.bz2 ./dist/patchelf-$(cat version).tar.bz2
          install -D ./result/tarballs/*.tar.gz ./dist/patchelf-$(cat version).tar.gz
      - uses: actions/upload-artifact@v3
        with:
          name: patchelf
          path: dist/*

  build_musl:
    name: Build static musl binaries
    needs: [build_tarballs]
    runs-on: ubuntu-22.04-ppc64le
    strategy:
      fail-fast: false
      matrix:
        platform: ["ppc64le"]
    steps:
      # - name: Set up QEMU
      #   if: matrix.platform != 'amd64'
      #   uses: docker/setup-qemu-action@v3

      - uses: actions/download-artifact@v3
        with:
          name: patchelf
          path: dist
      - name: Build binaries
        env:
          CXXFLAGS: "-D_FORTIFY_SOURCE=2 -fstack-protector-strong -Wformat -Werror=format-security -O2 -static"
        run: |
          cat <<EOF > build.sh
          set -e
          set -x
          apk add build-base
          tar -xf dist/*.tar.bz2
          rm -f dist/*
          cd patchelf-*
          ./configure --prefix /patchelf
          make check || (cat tests/test-suite.log; exit 1)
          make install-strip
          cd -
          tar -czf ./dist/patchelf-\$(cat patchelf-*/version)-\$(uname -m).tar.gz -C /patchelf .
          EOF

          if [ "${{ matrix.platform }}" == "i386" ]; then
              ENTRYPOINT=linux32
          else
              ENTRYPOINT=
          fi
          docker run -e CXXFLAGS -v $(pwd):/gha ${{ matrix.platform }}/alpine:edge ${ENTRYPOINT} sh -ec "cd /gha && sh ./build.sh"
      - name: Check binaries
        run: |
          cat <<EOF > check.sh
          set -e
          set -x
          tar -xf ./dist/patchelf-*-*.tar.gz
          ./bin/patchelf --version
          EOF
          docker run -v $(pwd):/gha ${{ matrix.platform }}/debian:unstable-slim sh -ec "cd /gha && sh ./check.sh"
      - uses: actions/upload-artifact@v3
        with:
          name: patchelf
          path: dist/*
